plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.hibernate.orm' version '6.1.5.Final'
	//id 'org.graalvm.buildtools.native' version '0.9.18'
	id 'jacoco'
}

group = 'com.mehkey'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

/*graalvmNative {
    testSupport = false
}*/

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'

}

tasks.named('test') {
	useJUnitPlatform()
}

jar {
    baseName = 'urlshortening'
    version =  '0.0.1-SNAPSHOT'
}


test {
	finalizedBy jacocoTestReport
    /*jacoco {
		toolVersion = "0.8.8"
		destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
		classDumpDir = file("$buildDir/jacoco/classpathdumps")
	}*/
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
		csv.enabled true
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')

    }
//getExecutionData().setFrom(fileTree(buildDir).include("/jacoco/jacocoTest.exec"))
}

